{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 24d91b53e85d94c9a5ca","webpack:///./src/js/index.js","webpack:///./src/js/app.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_app","_app2","programm","initialize","this","bindEvents","document","addEventListener","onDeviceReady","receivedEvent","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","App","checkPage","fileName","location","href","split","slice","form","querySelector","onSubmitSave","localStorage","getItem","onSubmitDelete","databaseGet","parseInt","item","result","name","description","databaseTodosGet","todos","console","log","ul","createElement","className","div","forEach","elem","timeStamp","innerHTML","appendChild","items","querySelectorAll","slicedItems","setItem","e","preventDefault","databaseTodosAdd","pushRedirectTo","path","new_path","window","pop","replace","push","join","PUSH","url","transition","databaseTodosDelete","callback","transaction","db","store","objectStore","request","oncomplete","onerror","databaseError","get","keyRange","IDBKeyRange","lowerBound","cursorRequest","openCursor","data","onsuccess","target","databaseOpen","version","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","error","put","Date","now","mozIndexedDB","webkitIndexedDB","msIndexedDB"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _app = __webpack_require__(1);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar programm = {\n\t    // Application Constructor\n\t    initialize: function initialize() {\n\t        this.bindEvents();\n\t    },\n\t    // Bind Event Listeners\n\t    //\n\t    // Bind any events that are required on startup. Common events are:\n\t    // 'load', 'deviceready', 'offline', and 'online'.\n\t    bindEvents: function bindEvents() {\n\t        document.addEventListener('deviceready', this.onDeviceReady, false);\n\t    },\n\t    // deviceready Event Handler\n\t    //\n\t    // The scope of 'this' is the event. In order to call the 'receivedEvent'\n\t    // function, we must explicitly call 'app.receivedEvent(...);'\n\t    onDeviceReady: function onDeviceReady() {\n\t        programm.receivedEvent();\n\t    },\n\t    // Update DOM on a Received Event\n\t    receivedEvent: function receivedEvent() {\n\t        var app = new _app2.default();\n\t    }\n\t};\n\tprogramm.initialize();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar App = function App() {\n\t    _classCallCheck(this, App);\n\t\n\t    window.addEventListener('push', checkPage);\n\t    // 'global' variable to store reference to the database\n\t    // Some global variables (database, references to key UI elements)\n\t    var db, form;\n\t    // полифилл indexedDB\n\t    // window.shimIndexedDB.__useShim();\n\t    var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n\t\n\t    databaseOpen(checkPage);\n\t    // window.addEventListener('push', checkPage);\n\t\n\t    function checkPage() {\n\t        var fileName = location.href.split(\"/\").slice(-1);\n\t        fileName = fileName[0];\n\t        if (fileName === 'add.html') {\n\t            form = document.querySelector('.form');\n\t            form.addEventListener('submit', onSubmitSave);\n\t        } else if (fileName === 'edit.html') {\n\t            var id = localStorage.getItem('noteToEdit');\n\t            form = document.querySelector('.form');\n\t            form.addEventListener('submit', onSubmitDelete);\n\t            databaseGet(parseInt(id, 10), function (item) {\n\t                // console.log(item);\n\t                form.querySelector('.form__title').value = item.result.name;\n\t                form.querySelector('.form__description').value = item.result.description;\n\t            });\n\t        } else {\n\t            databaseTodosGet(function (todos) {\n\t                console.log(todos);\n\t                var ul = document.createElement('ul');\n\t                ul.className = 'table-view';\n\t                var div = '';\n\t                todos.forEach(function (elem) {\n\t                    div += '<li class=\"table-view-cell\"><a id=\"' + elem.timeStamp + '\" href=\"edit.html\" data-transition=\"slide-in\" class=\"note__item push-right\"><strong>' + elem.name + '</strong></a></li>';\n\t                });\n\t                ul.innerHTML = div;\n\t                document.querySelector('.card').appendChild(ul);\n\t                var items = document.querySelectorAll('.note__item');\n\t                var slicedItems = [].slice.call(items);\n\t                slicedItems.forEach(function (item) {\n\t                    item.addEventListener('touchstart', function () {\n\t                        // self._showContent(idx);\n\t                        // console.log(this.id);\n\t                        localStorage.setItem(\"noteToEdit\", this.id);\n\t                    });\n\t                });\n\t\n\t                // .onclick = function() {\n\t                //         console.log(this);\n\t                //     }\n\t                // addEventListener('hover', function(e) {\n\t                //   console.log(this);\n\t                //   // localStorage.setItem(\"noteToEdit\", \"John\");\n\t                // });;\n\t            });\n\t        }\n\t    }\n\t\n\t    function onSubmitSave(e) {\n\t        e.preventDefault();\n\t        databaseTodosAdd(function () {\n\t            form.querySelector('.form__title').value = '';\n\t            form.querySelector('.form__description').value = '';\n\t            pushRedirectTo('index.html');\n\t        });\n\t    }\n\t\n\t    function pushRedirectTo(path) {\n\t        var new_path = window.location.href.split('/');\n\t        new_path.pop();\n\t        path.replace('/', '');\n\t        new_path.push(path);\n\t        new_path = new_path.join('/');\n\t        //alert('p: ' + new_path);\n\t        PUSH({\n\t            url: new_path,\n\t            transition: 'fade'\n\t        });\n\t    }\n\t\n\t    function onSubmitDelete(e) {\n\t        e.preventDefault();\n\t        var id = localStorage.getItem('noteToEdit');\n\t        databaseTodosDelete(parseInt(id, 10), function () {\n\t            pushRedirectTo('index.html');\n\t        });\n\t    }\n\t\n\t    function databaseTodosDelete(id, callback) {\n\t        var transaction = db.transaction(['todo'], 'readwrite');\n\t        var store = transaction.objectStore('todo');\n\t        var request = store.delete(id);\n\t        transaction.oncomplete = function (e) {\n\t            callback();\n\t        };\n\t        request.onerror = databaseError;\n\t    }\n\t\n\t    function databaseGet(id, callback) {\n\t        var transaction = db.transaction(['todo'], 'readwrite');\n\t        var store = transaction.objectStore('todo');\n\t        var item = store.get(id);\n\t        transaction.oncomplete = function (e) {\n\t            callback(item);\n\t        };\n\t        // request.onerror = databaseError;\n\t    }\n\t\n\t    function databaseTodosGet(callback) {\n\t        var transaction = db.transaction(['todo'], 'readonly');\n\t        var store = transaction.objectStore('todo');\n\t\n\t        // Get everything in the store\n\t        var keyRange = IDBKeyRange.lowerBound(0);\n\t        var cursorRequest = store.openCursor(keyRange);\n\t\n\t        // This fires once per row in the store. So, for simplicity,\n\t        // collect the data in an array (data), and pass it in the\n\t        // callback in one go.\n\t        var data = [];\n\t        cursorRequest.onsuccess = function (e) {\n\t            var result = e.target.result;\n\t\n\t            // If there's data, add it to array\n\t            if (result) {\n\t                data.push(result.value);\n\t                result.continue();\n\t\n\t                // Reach the end of the data\n\t            } else {\n\t                callback(data);\n\t            }\n\t        };\n\t    }\n\t\n\t    function databaseOpen(callback) {\n\t        // Open a database, specify the name and version\n\t        var version = 1;\n\t        var request = indexedDB.open('todos', version);\n\t\n\t        // Run migrations if necessary\n\t        request.onupgradeneeded = function (e) {\n\t            db = e.target.result;\n\t            e.target.transaction.onerror = databaseError;\n\t            db.createObjectStore('todo', {\n\t                keyPath: 'timeStamp'\n\t            });\n\t        };\n\t\n\t        request.onsuccess = function (e) {\n\t            db = e.target.result;\n\t            callback();\n\t        };\n\t        request.onerror = databaseError;\n\t    }\n\t\n\t    function databaseError(e) {\n\t        console.error('An IndexedDB error has occurred', e);\n\t    }\n\t\n\t    function databaseTodosAdd(callback) {\n\t        var transaction = db.transaction(['todo'], 'readwrite');\n\t        var store = transaction.objectStore('todo');\n\t        var request = store.put({\n\t            name: form.querySelector('.form__title').value,\n\t            description: form.querySelector('.form__description').value,\n\t            timeStamp: Date.now()\n\t        });\n\t\n\t        transaction.oncomplete = function (e) {\n\t            callback();\n\t        };\n\t        request.onerror = databaseError;\n\t    }\n\t};\n\t\n\texports.default = App;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 24d91b53e85d94c9a5ca\n **/","import App from './app';\n\nvar programm = {\n    // Application Constructor\n    initialize: function() {\n        this.bindEvents();\n    },\n    // Bind Event Listeners\n    //\n    // Bind any events that are required on startup. Common events are:\n    // 'load', 'deviceready', 'offline', and 'online'.\n    bindEvents: function() {\n        document.addEventListener('deviceready', this.onDeviceReady, false);\n    },\n    // deviceready Event Handler\n    //\n    // The scope of 'this' is the event. In order to call the 'receivedEvent'\n    // function, we must explicitly call 'app.receivedEvent(...);'\n    onDeviceReady: function() {\n        programm.receivedEvent();\n    },\n    // Update DOM on a Received Event\n    receivedEvent: function() {\n        var app = new App();\n    }\n};\nprogramm.initialize();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/index.js\n **/","export default class App {\n    constructor() {\n        window.addEventListener('push', checkPage);\n        // 'global' variable to store reference to the database\n        // Some global variables (database, references to key UI elements)\n        var db, form;\n        // полифилл indexedDB\n        // window.shimIndexedDB.__useShim();\n        var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n\n        databaseOpen(checkPage);\n        // window.addEventListener('push', checkPage);\n\n        function checkPage() {\n            var fileName = location.href.split(\"/\").slice(-1);\n            fileName = fileName[0];\n            if (fileName === 'add.html') {\n                form = document.querySelector('.form');\n                form.addEventListener('submit', onSubmitSave);\n            } else if (fileName === 'edit.html') {\n              let id = localStorage.getItem('noteToEdit')\n                form = document.querySelector('.form');\n                form.addEventListener('submit', onSubmitDelete);\n                databaseGet(parseInt(id, 10), (item) => {\n                  // console.log(item);\n                  form.querySelector('.form__title').value = item.result.name;\n                  form.querySelector('.form__description').value = item.result.description;\n                })\n            } else {\n                databaseTodosGet(function(todos) {\n                    console.log(todos);\n                    var ul = document.createElement('ul');\n                    ul.className = 'table-view';\n                    var div = '';\n                    todos.forEach(function(elem) {\n                        div += `<li class=\"table-view-cell\"><a id=\"${elem.timeStamp}\" href=\"edit.html\" data-transition=\"slide-in\" class=\"note__item push-right\"><strong>${elem.name}</strong></a></li>`;\n                    });\n                    ul.innerHTML = div;\n                    document.querySelector('.card').appendChild(ul);\n                    let items = document.querySelectorAll('.note__item');\n                    let slicedItems = [].slice.call(items);\n                    slicedItems.forEach(function(item) {\n                        item.addEventListener('touchstart', function() {\n                            // self._showContent(idx);\n                            // console.log(this.id);\n                            localStorage.setItem(\"noteToEdit\", this.id);\n                        });\n                    });\n\n                    // .onclick = function() {\n                    //         console.log(this);\n                    //     }\n                    // addEventListener('hover', function(e) {\n                    //   console.log(this);\n                    //   // localStorage.setItem(\"noteToEdit\", \"John\");\n                    // });;\n\n                });\n            }\n        }\n\n        function onSubmitSave(e) {\n            e.preventDefault();\n            databaseTodosAdd(function() {\n                form.querySelector('.form__title').value = '';\n                form.querySelector('.form__description').value = '';\n                pushRedirectTo('index.html');\n            });\n        }\n\n        function pushRedirectTo(path) {\n            var new_path = window.location.href.split('/');\n            new_path.pop();\n            path.replace('/', '');\n            new_path.push(path);\n            new_path = new_path.join('/');\n            //alert('p: ' + new_path);\n            PUSH({\n                url: new_path,\n                transition: 'fade'\n            });\n        }\n\n        function onSubmitDelete(e) {\n            e.preventDefault();\n            let id = localStorage.getItem('noteToEdit');\n            databaseTodosDelete(parseInt(id, 10), () => {\n                pushRedirectTo('index.html');\n            });\n        }\n\n        function databaseTodosDelete(id, callback) {\n            var transaction = db.transaction(['todo'], 'readwrite');\n            var store = transaction.objectStore('todo');\n            var request = store.delete(id);\n            transaction.oncomplete = function(e) {\n                callback();\n            };\n            request.onerror = databaseError;\n        }\n\n        function databaseGet(id, callback) {\n            var transaction = db.transaction(['todo'], 'readwrite');\n            var store = transaction.objectStore('todo');\n            var item = store.get(id);\n            transaction.oncomplete = function(e) {\n                callback(item);\n            };\n            // request.onerror = databaseError;\n        }\n\n        function databaseTodosGet(callback) {\n            var transaction = db.transaction(['todo'], 'readonly');\n            var store = transaction.objectStore('todo');\n\n            // Get everything in the store\n            var keyRange = IDBKeyRange.lowerBound(0);\n            var cursorRequest = store.openCursor(keyRange);\n\n            // This fires once per row in the store. So, for simplicity,\n            // collect the data in an array (data), and pass it in the\n            // callback in one go.\n            var data = [];\n            cursorRequest.onsuccess = function(e) {\n                var result = e.target.result;\n\n                // If there's data, add it to array\n                if (result) {\n                    data.push(result.value);\n                    result.continue();\n\n                    // Reach the end of the data\n                } else {\n                    callback(data);\n                }\n            };\n        }\n\n        function databaseOpen(callback) {\n            // Open a database, specify the name and version\n            var version = 1;\n            var request = indexedDB.open('todos', version);\n\n            // Run migrations if necessary\n            request.onupgradeneeded = function(e) {\n                db = e.target.result;\n                e.target.transaction.onerror = databaseError;\n                db.createObjectStore('todo', {\n                    keyPath: 'timeStamp'\n                });\n            };\n\n            request.onsuccess = function(e) {\n                db = e.target.result;\n                callback();\n            };\n            request.onerror = databaseError;\n        }\n\n        function databaseError(e) {\n            console.error('An IndexedDB error has occurred', e);\n        }\n\n        function databaseTodosAdd(callback) {\n            var transaction = db.transaction(['todo'], 'readwrite');\n            var store = transaction.objectStore('todo');\n            var request = store.put({\n                name: form.querySelector('.form__title').value,\n                description: form.querySelector('.form__description').value,\n                timeStamp: Date.now()\n            });\n\n            transaction.oncomplete = function(e) {\n                callback();\n            };\n            request.onerror = databaseError;\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/app.js\n **/"],"sourceRoot":""}